import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});
// Generated by CodiumAI

describe('App', () => {

  // App loads and sets ready state to true
  it('should set ready state to true when App loads', async () => {
    const { getByText } = render(<App />);
    expect(getByText('Loading...')).toBeInTheDocument();
    await waitFor(() => expect(getByText('Video to GIF Converter')).toBeInTheDocument());
  });

  // No video file uploaded and convert button is clicked
  it('should not convert when no video file is uploaded and convert button is clicked', () => {
    const { getByText } = render(<App />);
    const convertButton = getByText('Convert');
    fireEvent.click(convertButton);
    expect(toast.error).toHaveBeenCalledWith("Conversion Failed.");
  });
});
